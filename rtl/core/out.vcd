$date
	Thu May 20 23:50:06 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module faketb $end
$var wire 32 ! d_addr_o [31:0] $end
$var wire 32 " d_data_i [31:0] $end
$var wire 32 # d_data_o [31:0] $end
$var wire 1 $ d_we_o $end
$var wire 32 % imem_address [31:0] $end
$var reg 1 & clk $end
$var reg 1 ' hlt $end
$var reg 1 ( rst $end
$scope module arv $end
$var wire 1 & clk_i $end
$var wire 32 ) d_addr_o [31:0] $end
$var wire 32 * d_data_i [31:0] $end
$var wire 32 + d_data_o [31:0] $end
$var wire 1 $ d_we_o $end
$var wire 1 ' hlt_i $end
$var wire 32 , i_addr_o [31:0] $end
$var wire 32 - i_data_i [31:0] $end
$var wire 1 ( rst_i $end
$var wire 32 . rf_rs2 [31:0] $end
$var wire 32 / rf_rs1 [31:0] $end
$var wire 32 0 rf_rd_data [31:0] $end
$var wire 32 1 pc_plus_four [31:0] $end
$var wire 5 2 d_rs2_sel [4:0] $end
$var wire 5 3 d_rs1_sel [4:0] $end
$var wire 1 4 d_rf_we $end
$var wire 2 5 d_rf_din_sel [1:0] $end
$var wire 5 6 d_rd_sel [4:0] $end
$var wire 1 7 d_pc_we $end
$var wire 32 8 d_imm [31:0] $end
$var wire 1 9 d_b_op_sel $end
$var wire 4 : d_alu_op_sel [3:0] $end
$var wire 1 ; d_a_op_sel $end
$var wire 1 < branch_taken $end
$var wire 32 = alu_out [31:0] $end
$var wire 32 > alu_b_in [31:0] $end
$var wire 32 ? alu_a_in [31:0] $end
$var reg 32 @ InstructionRegister [31:0] $end
$var reg 1 A ProcessorState $end
$var reg 32 B ProgramCounter [31:0] $end
$scope module alu $end
$var wire 32 C A [31:0] $end
$var wire 32 D A_Signed [31:0] $end
$var wire 32 E B [31:0] $end
$var wire 32 F B_Signed [31:0] $end
$var wire 4 G Sel [3:0] $end
$var reg 32 H Out [31:0] $end
$upscope $end
$scope module decode $end
$var wire 1 < branch_taken_i $end
$var wire 32 I instr_i [31:0] $end
$var wire 5 J rs2_sel_o [4:0] $end
$var wire 5 K rs1_sel_o [4:0] $end
$var wire 5 L rd_sel_o [4:0] $end
$var wire 7 M opcode [6:0] $end
$var wire 32 N imm_o [31:0] $end
$var wire 7 O func7 [6:0] $end
$var wire 3 P func3 [2:0] $end
$var reg 1 ; a_op_sel_o $end
$var reg 4 Q alu_op_sel_o [3:0] $end
$var reg 1 9 b_op_sel_o $end
$var reg 3 R instr_format [2:0] $end
$var reg 1 7 pc_we_o $end
$var reg 2 S rf_din_sel_o [1:0] $end
$var reg 1 4 rf_we_o $end
$scope function getExtImm $end
$var reg 3 T fmt [2:0] $end
$var reg 32 U getExtImm [31:0] $end
$var reg 32 V instr [31:0] $end
$upscope $end
$upscope $end
$scope module mux $end
$var wire 32 W in0 [31:0] $end
$var wire 32 X in1 [31:0] $end
$var wire 32 Y in2 [31:0] $end
$var wire 32 Z in3 [31:0] $end
$var wire 2 [ sel [1:0] $end
$var reg 32 \ out [31:0] $end
$upscope $end
$scope module rf $end
$var wire 1 & Clk_i $end
$var wire 1 4 Data_We_i $end
$var wire 32 ] Data_i [31:0] $end
$var wire 5 ^ Ra_Sel_i [4:0] $end
$var wire 5 _ Rb_Sel_i [4:0] $end
$var wire 5 ` Rd_Sel_i [4:0] $end
$var wire 1 ( Rst_i $end
$var wire 32 a Rb_o [31:0] $end
$var wire 32 b Ra_o [31:0] $end
$var integer 32 c i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
b0 Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
xA
bx @
bx ?
bx >
bx =
x<
x;
bx :
x9
bx 8
x7
bx 6
bx 5
x4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bz +
bz *
bz )
0(
0'
0&
bx %
z$
bz #
bz "
bz !
$end
#1000
1&
#2000
0&
1(
#3000
0<
b0 =
b0 H
b0 Y
b0 D
b0 ?
b0 C
b0 /
b0 b
b0 .
b0 a
b0 M
b0 P
b0 O
b0 6
b0 L
b0 `
b0 3
b0 K
b0 ^
b0 2
b0 J
b0 _
b0 V
b0 @
b0 I
b100 1
b100 X
b0 %
b0 ,
b0 B
1A
b100000 c
1&
#4000
0&
0(
#5000
b0x00 D
b0x00 ?
b0x00 C
0A
b1000 1
b1000 X
b10 -
b100 %
b100 ,
b100 B
1&
#6000
0&
#7000
b10 M
b10 V
b10 @
b10 I
1A
1&
#8000
0&
#9000
b0x000 D
b0x000 ?
b0x000 C
0A
b1100 1
b1100 X
b110 -
b1000 %
b1000 ,
b1000 B
1&
#10000
0&
#11000
b110 M
b110 V
b110 @
b110 I
1A
1&
#12000
0&
#13000
b0xx00 D
b0xx00 ?
b0xx00 C
0A
b10000 1
b10000 X
b1010 -
b1100 %
b1100 ,
b1100 B
1&
#14000
0&
#15000
b1010 M
b1010 V
b1010 @
b1010 I
1A
1&
#16000
0&
#17000
b0x0000 D
b0x0000 ?
b0x0000 C
0A
b10100 1
b10100 X
b1110 -
b10000 %
b10000 ,
b10000 B
1&
#18000
0&
#19000
b1110 M
b1110 V
b1110 @
b1110 I
1A
1&
#20000
0&
#21000
b0x0x00 D
b0x0x00 ?
b0x0x00 C
0A
b11000 1
b11000 X
b10010 -
b10100 %
b10100 ,
b10100 B
1&
#22000
0&
#23000
b10010 M
b10010 V
b10010 @
b10010 I
1A
1&
#24000
0&
#25000
b0xx000 D
b0xx000 ?
b0xx000 C
0A
b11100 1
b11100 X
b10110 -
b11000 %
b11000 ,
b11000 B
1&
#26000
0&
#27000
b10110 M
b10110 V
b10110 @
b10110 I
1A
1&
#28000
0&
#29000
b0xxx00 D
b0xxx00 ?
b0xxx00 C
0A
b100000 1
b100000 X
b11010 -
b11100 %
b11100 ,
b11100 B
1&
#30000
0&
#31000
b11010 M
b11010 V
b11010 @
b11010 I
1A
1&
#32000
0&
#33000
b0x00000 D
b0x00000 ?
b0x00000 C
0A
b100100 1
b100100 X
b11110 -
b100000 %
b100000 ,
b100000 B
1&
#34000
0&
#35000
b11110 M
b11110 V
b11110 @
b11110 I
1A
1&
#36000
0&
#37000
b0x00x00 D
b0x00x00 ?
b0x00x00 C
0A
b101000 1
b101000 X
b100010 -
b100100 %
b100100 ,
b100100 B
1&
#38000
0&
#39000
b100010 M
b100010 V
b100010 @
b100010 I
1A
1&
#40000
0&
#41000
b0x0x000 D
b0x0x000 ?
b0x0x000 C
0A
b101100 1
b101100 X
b100110 -
b101000 %
b101000 ,
b101000 B
1&
#42000
0&
#43000
b100110 M
b100110 V
b100110 @
b100110 I
1A
1&
#44000
0&
#45000
b0x0xx00 D
b0x0xx00 ?
b0x0xx00 C
0A
b110000 1
b110000 X
b101010 -
b101100 %
b101100 ,
b101100 B
1&
#46000
0&
#47000
b101010 M
b101010 V
b101010 @
b101010 I
1A
1&
#48000
0&
#49000
b0xx0000 D
b0xx0000 ?
b0xx0000 C
0A
b110100 1
b110100 X
b101110 -
b110000 %
b110000 ,
b110000 B
1&
#50000
0&
#51000
b101110 M
b101110 V
b101110 @
b101110 I
1A
1&
#52000
0&
#53000
b0xx0x00 D
b0xx0x00 ?
b0xx0x00 C
0A
b111000 1
b111000 X
b0 -
b110100 %
b110100 ,
b110100 B
1&
#54000
0&
#55000
b0 M
b0 V
b0 @
b0 I
1A
1&
#56000
0&
#57000
b0xxx000 D
b0xxx000 ?
b0xxx000 C
0A
b111100 1
b111100 X
bx -
b111000 %
b111000 ,
b111000 B
1&
#58000
0&
#59000
bx000000000000 0
bx000000000000 \
bx000000000000 ]
bx000000000000 8
bx000000000000 N
bx000000000000 W
bx000000000000 U
b11 T
bx D
bx ?
bx C
b11 R
14
b0 5
b0 S
b0 [
bx /
bx b
bx .
bx a
bx M
bx P
bx O
bx 6
bx L
bx `
bx 3
bx K
bx ^
bx 2
bx J
bx _
bx V
bx @
bx I
1A
1&
#60000
0&
#61000
0A
b1000000 1
b1000000 X
b111100 %
b111100 ,
b111100 B
1&
#62000
0&
#63000
1A
1&
#64000
0&
#65000
0A
b1000100 1
b1000100 X
b1000000 %
b1000000 ,
b1000000 B
1&
#66000
0&
#67000
1A
1&
#68000
0&
#69000
0A
b1001000 1
b1001000 X
b1000100 %
b1000100 ,
b1000100 B
1&
#70000
0&
#71000
1A
1&
#72000
0&
#73000
0A
b1001100 1
b1001100 X
b1001000 %
b1001000 ,
b1001000 B
1&
#74000
0&
#75000
1A
1&
#76000
0&
#77000
0A
b1010000 1
b1010000 X
b1001100 %
b1001100 ,
b1001100 B
1&
#78000
0&
#79000
1A
1&
#80000
0&
#81000
0A
b1010100 1
b1010100 X
b1010000 %
b1010000 ,
b1010000 B
1&
#82000
0&
#83000
1A
1&
#84000
0&
#85000
0A
b1011000 1
b1011000 X
b1010100 %
b1010100 ,
b1010100 B
1&
#86000
0&
#87000
1A
1&
#88000
0&
#89000
0A
b1011100 1
b1011100 X
b1011000 %
b1011000 ,
b1011000 B
1&
#90000
0&
#91000
1A
1&
#92000
0&
#93000
0A
b1100000 1
b1100000 X
b1011100 %
b1011100 ,
b1011100 B
1&
#94000
0&
#95000
1A
1&
#96000
0&
#97000
0A
b1100100 1
b1100100 X
b1100000 %
b1100000 ,
b1100000 B
1&
#98000
0&
#99000
1A
1&
#100000
0&
#101000
0A
b1101000 1
b1101000 X
b1100100 %
b1100100 ,
b1100100 B
1&
#102000
0&
#103000
1A
1&
#104000
0&
